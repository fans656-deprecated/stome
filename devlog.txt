2018-04-25 08:00:50
. upload with mime-type
. upload large file

2018-04-26 20:56:37
. download large file

2018-04-29 22:44:52
. video stream

实验HLS(HTTP Live Streaming)成功，可以在线播放视频
之后就是把API完善下，测试完备
再支持上七牛云的存储
然后就可以做网站了

2018-05-01 09:29:39
发现支持一下rsync也很不错
fans656.me提供package上传功能，那么整个package的上传用rsync来做，就可以在命令行一下子传上去一个文件夹


) frontend renamed upload
) delete file
) auth server
) frontend user login

2018-05-16 23:27:20

***** below is thinking about file uploading

PUT /img/girl.jpg
{
    'size': 2073,
    'part-size': 128,
    'part-beg': 1024,
    'start': true,
}

[empty/done => uploading]

    create/truncate file with name md5(path) for writing

when all part is verified

[uploading => storing]

    initiate store process

when any storage is done

[storing => done]


============================= md5(path) file deletion

when a storing process is done or failed
storing count +1
when storing_count == total_storage_count
delete the md5(path) file

============================= storage process

----------------------------- local

[init => storing]

    copy file to path

[storing => done]

----------------------------- qiniu

[init => encrypting]

    create file 'qiniu-encrypting' + md5(path) for writing

when done writing

[encrypting => uploading]

    upload the file to qiniu

[upload => done]

===================== tech issues

1. [done] How to manage process/thread execution
2. [done] How to partly update mongodb document
3. How to upload to qiniu

2018-05-30 07:52:16
) js split and encrypt and upload to qiniu

2018-05-30 09:52:24
http://dns.xsazz.com/
用这个网站的备案二级域名绑了七牛云

2018-05-30 20:49:38
) create upload token

2018-06-05 00:43:01
总算把很核心的一个东西给弄好了：七牛云上传与下载
期间各种蛋疼——HTTPS、绑定备案域名、文件混淆、client下载、service worker
anyway, 总是解决了，，以后是不是真的可用再说吧，测试域名+存2T东西其实挺贵的每个月

2018-06-05 19:19:07
打开new tab时如果用不同的origin那么service worker就截不下请求
所以看样子需要只用一个后端，，用service worker截到的fetch请求这个样子：

    https://ub:3000/static/js/bundle.js
    https://ub:6001/?depth=1
    https://ub:6001/home?depth=1
    https://ub:3000/static/media/file.54eb6ec9.png

访问分为三种：
1. get ui

    GET https://res.eno.zone/
    GET https://res.eno.zone/home

2. get file

    GET https://res.eno.zone/home/fans656/img/girl.jpg

3. api

    GET https://res.eno.zone/?op=ls
    GET https://res.eno.zone/?op=meta
    GET https://res.eno.zone/home/fans656/img/girl.jpg?op=meta

    PUT https://res.eno.zone/home
    POST https://res.eno.zone/home
    DELETE https://res.eno.zone/home
    (non-get requests defaults to api)

4. static resource

    GET https://res.eno.zone/static/js/bundle.js

总结一下

    if method == GET:
        if path.startswith('static/'):
            return <static-resource>
        elif has_query(url):
            return <api>
        elif is_dir(path):
            return <ui>
        else:
            return <file-content>
    else:
        return <api>
